version: '3.8'

services:
  # -- INFRAESTRUCTURA BASE --
  zookeeper:
    image: bitnami/zookeeper:3.8
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - market-net

  kafka:
    image: bitnami/kafka:3.4
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:9092
      - KAFKA_BROKER_ID=1
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    networks:
      - market-net

  influxdb:
    image: influxdb:2.7
    ports:
      - "8086:8086"
    volumes:
      - influxdb-data:/var/lib/influxdb2
    env_file: .env.influxdb
    networks:
      - market-net

  # -- COMPONENTES DEL MODELO --

  #  Los Ojos y  La Voz (Productor y Consumidor de datos)
  data_pipeline:
    build:
      context: ./data_pipeline
    container_name: data_pipeline
    depends_on:
      - kafka
      - influxdb
    env_file:
      - .env.pipeline
      - .env.influxdb
    networks:
      - market-net
    command: >
      sh -c "python producer.py & python consumer.py && fg"

  #  El Brazo (API para ejecutar órdenes)
  arm:
    build:
      context: ./arm
    container_name: arm
    ports:
      - "8000:8000" # Expone la API en http://localhost:8000
    volumes:
      - ./arm_db:/data # Persiste la base de datos de órdenes
    env_file: .env.arm
    networks:
      - market-net
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  #  El Cerebro (Modelo evolutivo que da órdenes)
  brain:
    build:
      context: ./brain
    container_name: brain
    depends_on:
      - arm
      - influxdb
    env_file:
      - .env.influxdb
      - .env.arm # Para que sepa la URL y la clave del Brazo
    networks:
      - market-net
    # Comando para ejecutar el cerebro. Puedes añadir tus propios argumentos aquí.
    command: >
      sh -c "sleep 20 && # Espera a que los otros servicios arranquen bien
             python evolves_with_arm.py --symbol BTCUSDT --exchange binance --timeframe 1m"

networks:
  market-net:
    driver: bridge

volumes:
  influxdb-data: